# auditd.conf configuration file parameters
type Auditd::Conf = Struct[
  {
    Optional['local_events']            => Enum['yes', 'no'],
    Optional['log_file']                => Stdlib::Absolutepath,
    Optional['write_logs']              => Enum['yes', 'no'],
    Optional['log_format']              => Enum[
      'raw', 'RAW',
      'enriched', 'ENRICHED',
    ],
    Optional['log_group']               => Variant[Integer, String[1]],
    Optional['priority_boost']          => Integer[0],
    Optional['flush']                   => Enum[
      'none', 'NONE',
      'incremental', 'INCREMENTAL',
      'incremental_async', 'INCREMENTAL_ASYNC',
      'data', 'DATA',
      'sync', 'SYNC',
    ],
    Optional['freq']                    => Integer[0],
    Optional['dispatcher']              => String,
    Optional['disp_qos']                => Enum[
      'lossy', 'LOSSY',
      'lossless', 'LOSSLESS'
    ],
    Optional['num_logs']                => Integer[0, 999],
    Optional['name_format']             => Enum[
      'none', 'NONE',
      'hostname', 'HOSTNAME',
      'fqd', 'FQD',
      'numeric', 'NUMERIC',
      'user', 'USER',
    ],
    Optional['name']                    => String,
    Optional['max_log_file']            => Integer,
    Optional['max_log_file_action']     => Enum[
      'ignore', 'IGNORE',
      'syslog', 'SYSLOG',
      'suspend', 'SUSPEND',
      'rotate', 'ROTATE',
      'keep_logs', 'KEEP_LOGS',
    ],
    Optional['verify_email']            => Enum['yes', 'no'],
    Optional['action_mail_acct']        => Variant[String, Stdlib::Email],
    Optional['space_left']              => Integer,
    Optional['space_left_action']       => Enum[
      'ignore', 'IGNORE',
      'syslog', 'SYSLOG',
      'rotate', 'ROTATE',
      'email', 'EMAIL',
      'exec', 'EXEC',
      'suspend', 'SUSPEND',
      'single', 'SINGLE',
      'halt', 'HALT',
    ],
    Optional['admin_space_left']        => Variant[Integer, String],
    Optional['admin_space_left_action'] => Enum[
      'ignore', 'IGNORE',
      'syslog', 'SYSLOG',
      'rotate', 'ROTATE',
      'email', 'EMAIL',
      'exec', 'EXEC',
      'suspend', 'SUSPEND',
      'single', 'SINGLE',
      'halt', 'HALT',
    ],
    Optional['disk_full_action']        => Enum[
      'ignore', 'IGNORE',
      'syslog', 'SYSLOG',
      'rotate', 'ROTATE',
      'exec', 'EXEC',
      'suspend', 'SUSPEND',
      'single', 'SINGLE',
      'halt', 'HALT',
    ],
    Optional['disk_error_action']       => Enum[
      'ignore', 'IGNORE',
      'syslog', 'SYSLOG',
      'exec', 'EXEC',
      'suspend', 'SUSPEND',
      'single', 'SINGLE',
      'halt', 'HALT',
    ],
    Optional['tcp_listen_port']         => Integer[1,65535],
    Optional['tcp_listen_queue']        => Integer,
    Optional['tcp_max_per_addr']        => Integer[1,1024],
    Optional['use_libwrap']             => Enum['yes', 'no'],
    Optional['tcp_client_ports']        => Variant[Integer, String],
    Optional['tcp_client_max_idle']     => Integer,
    Optional['transport']               => Enum['tcp', 'TCP', 'krb5', 'KRB5'],
    Optional['enable_krb5']             => Enum['yes', 'no'],
    Optional['krb5_principal']          => String,
    Optional['krb5_key_file']           => Stdlib::Absolutepath,
    Optional['distribute_network']      => Enum['yes', 'no'],
    Optional['q_depth']                 => Integer,
    Optional['overflow_action']         => Enum[
      'ignore', 'IGNORE',
      'syslog', 'SYSLOG',
      'suspend', 'SUSPEND',
      'single', 'SINGLE',
      'halt', 'HALT',
    ],
    Optional['max_restarts']            => Integer[0],
    Optional['plugin_dir']              => Stdlib::Absolutepath,
    Optional['end_of_event_timeout']    => Integer[0],
  }
]
